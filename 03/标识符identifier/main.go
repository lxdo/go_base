package main

import (
	"fmt"
	/**
	引入自定义包方法
	1) 包的绝对路径 (未配置GOPATH)如：/Users/lixiaodong/m2odata/www/go/src/go_code/03/整型int
	2) 包相对GOPATH路径 (配置GOPATH) 如：go_code/03/整型int (src默认带上)
	 */
)

/**
标识符的使用 identifier

	概念：
		1)go对各种变量、方法、函数等命名时使用的字符序列(字符串)称为标识符
		2)凡是自己可以起名字的地方都叫标识符
	命名规则：
		1)由26个英文字母大小写,0-9,_组成
		2)数字不可以开头   // var 3num int 错误
		3)go严格区分大小写
		4)标识符不能包含空格
		5)下划线"_" 本身在go中是一个特殊的标识符，称为空标识符。可以代表任何其他的标识符
		但是它对应的值会被忽略(比如：忽略某个返回值) 所以仅能被作为占位符使用，不能作为标识符使用
		6)不能以系统保留关键字（25个）作为标识符
	命名规范：
		包名：保持package的名字和目录保持一致，尽量采取有意义的包名，简短，有意义，不要和标准库冲突
		变量名、函数名、常量名：采用驼峰法   形式 ：xxxYyyZzz
		如果变量名、函数名、常量名首字母大写，则可以被其他的包访问，如果首字母小写，则只能在本包中使用
		可以简单理解成，首字母大写的是公开的，首字母小写是私有的


*/

func main() {
	// go严格区分大小写
	// go认为num和Num是不同的变量
	var num int = 10
	var Num int = 20
	fmt.Printf("num = %v Num = %v \n", num, Num)

	// 标识符不能包含空格
	// var a b int =30 错误

	// _是空标识符 用于占位 不能作为标识符使用
	// var _ int =40 错误

	// -不能使用
	// var a-b int =10 错误

	// 语法可以通过 但是要求不能使用 float也是同样
	var int int = 90
	fmt.Println("int = ", int)

	// 变量名、函数名、常量名首字母大写，则可以被其他的包访问，如果首字母小写，则只能在本包中使用
	// 引用自定义包变量、函数、常量：包名.标识符
}
