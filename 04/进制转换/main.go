package main

/**
进制的转换
	介绍

*/
func main() {
	/**
	第一组 (其它进制转十进制)

	1) 二进制 转 十进制
		规则：从最低位开始(右边的),将每个位上的数提取出来,乘以2的(位数-1)次方,然后求和
	 	例：将二进制：1011转成十进制的数
		1011=1*2^(1-1)+1*2^(2-1)+0*2^(3-1)+1*2^(4-1)=1+2+0+8=11

	2) 八进制 转 十进制
		规则：从最低位开始(右边的),将每个位上的数提取出来,乘以8的(位数-1)次方,然后求和
		例：将八进制：0123转成十进制的数
		0123=3*8^(1-1)+2*8^(2-1)+1*8^(3-1)=3+16+64=83

	3) 十六进制 转 十进制
		规则：从最低位开始(右边的),将每个位上的数提取出来,乘以16的(位数-1)次方,然后求和
		例：将十六进制：0x34A转成十进制的数
		0X34A=10*16^(1-1)+4*16^(2-1)+3*16^(3-1)=10+64+768=842 // A 对应 十进制的 10
	*/

	/**
	第二组 (十进制转其它进制)

	1) 十进制 转 二进制
	规则：将该数不断除以2，直到商为0为止，然后将每步得到的余数倒过来，就是对应的二进制
	例：将十进制56转成二进制
	56/2	28	0
	28/2	14	0
	14/2	7	0
	7/2		3 	1
	3/2		1	1

	56=111000

	2) 十进制 转 八进制
	规则:将该数不断除以8，直到商为0为止，然后将每步得到的余数倒过来，就是对应的八进制
	例:将十进制156转换成八进制
	156/8	19	4
	19/8	2	3

	156=0234 (八进制要以0开始)

	3) 十进制 转 十六进制
	规则：将该数不断除以16，直到商为0为止，然后将每步得到的余数倒过来，就是对应的十六进制
	例:将十进制356转成十六进制
	356/16	22	4
	22/16	1	6

	356=0x164 (十六进制要以0x开始)

	*/

	/**
	第三组 (二进制 转 八进制、十六进制)

	1) 二进制 转 八进制
	规则：将二进制数每三位一组(从低位开始组合)，转成对应的八进制数即可
	例:将二进制 11010101 转成八进制

		11 010 101
	= 	1*2^(1-1)+1*2^(2-1) 0*2^(1-1)+1*2^(2-1)+0*2^(3-1) 1*2^(1-1)+0*2^(2-1)+1*2^(3-1) 先将二进制转成十进制
	= 	3 2 5 (十进制)		// 得出十进制数 也在八进制数内 无需再转换
	= 0 3 2 5 (八进制要以0开始)
	2) 二进制 转 十六进制
	规则：将二进制数每四位一组(从低位开始组合),转成对应的十六进制即可
	例：将二进制 11010101 转成十六进制
			1101 0101
	=		1*2^(1-1)+0*2^(2-1)+1*2^(3-1)+1*2^(4-1) 1*2^(1-1)+0*2^(2-1)+1*2^(3-1)+0*2^(4-1) 先将二进制转成十进制
	=		13 5  // 得出十进制数 13对应十六进制数D 需要转换
	= 	0x 	D 	5  (十六进制要以0x开始)
	*/

	/**
	第四组 (八进制、十六进制 转 二进制)

	1) 八进制 转 二进制
	规则：将八进制数每1位，转成对应的一个3位的二进制数即可
	例：将八进制0237转成二进制
	0237 = 2 3 7 (十进制) = 10 011 111 (二进制)

	2) 十六进制 转 二进制
	规则：将十六进制数每1位，转成对应的一个4位的二进制数即可
	例：将十六进制0x237转成二进制
	0x237 = 2 3 7 (十进制) = 10 0011 0111 (二进制 不足4位用0补齐)
	*/
}
